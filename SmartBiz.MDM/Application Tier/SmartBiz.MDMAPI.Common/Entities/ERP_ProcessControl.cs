//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmartBiz.MDMAPI.Common.Entities
{
    using System;
    using System.Collections.Generic;
    using System.Text.RegularExpressions;
    using System.ComponentModel.DataAnnotations;
    
    using System.Runtime.Serialization;
    [DataContract(IsReference=true)]
    public partial class ERP_ProcessControl
    {
        private string backing_ProductCode;
        private DateTime backing_PreviousProcessDate;
        private int backing_PreviousFinancialYear;
        private int backing_FinancialYear;

    	[DataMember]
    	public string ProductCode 
        {
            get
            {
                return backing_ProductCode;
            }
            set
            {
                if (Regex.IsMatch(value, @"^[a-zA-Z0-9]+$"))
                {
                    backing_ProductCode = value;
                }
                else
                {
                    throw new ValidationException("Product code only can have numbers and characters");
                }
            }
        }
    	[DataMember]
    	public Nullable<System.DateTime> ProcessDate { get; set; }
        [DataMember]
        public Nullable<System.DateTime> PreviousProcessDate
        {
            get;
            set;
        }
    	[DataMember]
    	public Nullable<int> FinancialYear 
        {
            get
            {
                return backing_FinancialYear;
            }
            set
            {
                string check_value = value.ToString();
                if (Regex.IsMatch(check_value, @"^[0-9]{4}$"))
                {
                    backing_FinancialYear = (int)value;
                }
                else
                {
                    throw new ValidationException("Financial year must be an number of four digits");
                }
            }
        }
    	[DataMember]
    	public Nullable<int> PreviousFinancialYear 
        {
            get
            {
                return backing_PreviousFinancialYear;
            }
            set
            {
                string check_value = value.ToString();
                if (Regex.IsMatch(check_value, @"^[0-9]{4}$"))
                {
                    backing_PreviousFinancialYear = (int)value;
                }
                else
                {
                    throw new ValidationException("Financial year must be an number of four digits");
                }
                if (value<FinancialYear)
                {
                    backing_PreviousFinancialYear = (int)value;
                }
                else
                {
                    throw new ValidationException("Previous financial year must be less than current financial year");
                }
            }
        }
    	[DataMember]
    	public Nullable<int> ProcessPeriod { get; set; }
    	[DataMember]
    	public Nullable<int> PreviousProcessPeriod { get; set; }
    	[DataMember]
    	public Nullable<int> AccountingPeriod { get; set; }
    	[DataMember]
    	public Nullable<int> PreviousAccountingPeriod { get; set; }
    	[DataMember]
    	public Nullable<int> LastRevaluationPeriod { get; set; }
    	public string EnteredFrom { get; set; }
    	public string EnteredUser { get; set; }
    	public Nullable<System.DateTime> EnteredDate { get; set; }
    	public string ModifiedFrom { get; set; }
    	public string ModifiedUser { get; set; }
    	public Nullable<System.DateTime> ModifiedDate { get; set; }
    public ERP_ProcessControl Clone(){
    	return this.MemberwiseClone() as ERP_ProcessControl;
    }
    public override String ToString(){
       return ProductCode.ToString();
    }
    }
}
