//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmartBiz.MDMAPI.Common.Entities
{
    using System;
    using System.Collections.Generic;
    using System.Text.RegularExpressions;
    using System.Runtime.Serialization;
    using System.ComponentModel.DataAnnotations;
       
    [DataContract(IsReference = true)]
    public partial class HR_EMPLOYEE
    {
    	
        public HR_EMPLOYEE()
        {
            this.HR_EMP_ATTACHMENT = new HashSet<HR_EMP_ATTACHMENT>();
            this.HR_EMP_BANK = new HashSet<HR_EMP_BANK>();
            this.HR_EMP_PASSPORT = new HashSet<HR_EMP_PASSPORT>();
            this.HR_EMP_RELATIONINFO = new HashSet<HR_EMP_RELATIONINFO>();
            this.HR_EMP_RELATIONINFO1 = new HashSet<HR_EMP_RELATIONINFO>();
            this.HR_EMP_TRAININGS = new HashSet<HR_EMP_TRAININGS>();
            this.HR_EMP_WARNINGS = new HashSet<HR_EMP_WARNINGS>();
            this.HR_EMP_MEMBER_DETAIL = new HashSet<HR_EMP_MEMBER_DETAIL>();
            this.HR_EMP_QUALIFICATION = new HashSet<HR_EMP_QUALIFICATION>();
            this.HR_EMP_CASH_BENEFIT = new HashSet<HR_EMP_CASH_BENEFIT>();
            this.HR_EMP_NONCASH_BENEFIT = new HashSet<HR_EMP_NONCASH_BENEFIT>();
        }
        private string _EMP_CALLING_NAME;
        private string _EMP_SURNAME;
        private string _EMP_MAIDEN_NAME;
        private string _EMP_FULLNAME;
        private string _EMP_OTHER_NAMES;
    
    	[DataMember]
    	public string EMP_NUMBER { get; set; }
    	[DataMember]
    	public string EMP_TITLE { get; set; }
    	[DataMember]
        public string EMP_CALLING_NAME
        {
            get
            {
                return _EMP_CALLING_NAME;
            }
            set
            {
                if (value == null || value == "" | value.Length <= 0)
                {
                    throw new ValidationException("Calling name cannot be empty!");
                }
                else if (value != null)
                {
                    if (!Regex.IsMatch(value, @"^[a-zA-Z ]+$"))
                    {
                        throw new ValidationException("Name cannot contain numbers!");
                    }
                    _EMP_CALLING_NAME = value;
                }
            }
        }
    	[DataMember]
        public string EMP_SURNAME
        {
            get
            {
                return _EMP_SURNAME;
            }
            set
            {
                if (value == null || value == "" | value.Length <= 0)
                {
                    throw new ValidationException("Surname cannot be empty!");
                }
                else if (value != null)
                {
                    if (!Regex.IsMatch(value, @"^[a-zA-Z ]+$"))
                    {
                        throw new ValidationException("Name cannot contain numbers!");
                    }
                    _EMP_SURNAME = value;
                }
            }
        }

    	[DataMember]
        public string EMP_MAIDEN_NAME
        {
            get
            {
                return _EMP_MAIDEN_NAME;
            }
            set
            {
                if (value != null)
                {
                    if (value == null || value == "" | value.Length <= 0)
                    {
                        throw new ValidationException("Maiden name cannot be empty!");
                    }
                    else if (!Regex.IsMatch(value, @"^[a-zA-Z ]+$"))
                    {
                        throw new ValidationException("Name cannot contain numbers!");
                    }
                    _EMP_MAIDEN_NAME = value;
                }
            }
        }
    	[DataMember]
    	public string EMP_MIDDLE_INI { get; set; }
    	[DataMember]
    	public string EMP_NAMES_BY_INI { get; set; }
    	[DataMember]
        public string EMP_FULLNAME
        {
            get
            {
                return _EMP_FULLNAME;
            }
            set
            {
                if (value != null)
                {
                    if (value == null || value == "" | value.Length <= 0)
                    {
                        throw new ValidationException("Full name cannot be empty!");
                    }
                    else if (!Regex.IsMatch(value, @"^[a-zA-Z ]+$"))
                    {
                        throw new ValidationException("Name cannot contain numbers!");
                    }
                    _EMP_FULLNAME = value;
                }
            }
        }
    	[DataMember]
        public string EMP_OTHER_NAMES
        {
            get
            {
                return _EMP_OTHER_NAMES;
            }
            set
            {
                if (value != null)
                {
                    if (value == null || value == "" | value.Length <= 0)
                    {
                        throw new ValidationException("Other name cannot be empty!");
                    }
                    else if (!Regex.IsMatch(value, @"^[a-zA-Z ]+$"))
                    {
                        throw new ValidationException("Name cannot contain numbers!");
                    }
                    _EMP_OTHER_NAMES = value;
                }
            }
        }
    	[DataMember]
        public virtual ICollection<HR_EMP_ATTACHMENT> HR_EMP_ATTACHMENT { get; set; }
    	[DataMember]
        public virtual ICollection<HR_EMP_BANK> HR_EMP_BANK { get; set; }
    	[DataMember]
        public virtual ICollection<HR_EMP_PASSPORT> HR_EMP_PASSPORT { get; set; }
    	[DataMember]
        public virtual ICollection<HR_EMP_RELATIONINFO> HR_EMP_RELATIONINFO { get; set; }
    	[DataMember]
        public virtual ICollection<HR_EMP_RELATIONINFO> HR_EMP_RELATIONINFO1 { get; set; }
    	[DataMember]
        public virtual HR_EMP_EMERGENCY HR_EMP_EMERGENCY { get; set; }
    	[DataMember]
        public virtual ICollection<HR_EMP_TRAININGS> HR_EMP_TRAININGS { get; set; }
    	[DataMember]
        public virtual HR_EMP_TRANSPORT HR_EMP_TRANSPORT { get; set; }
    	[DataMember]
        public virtual ICollection<HR_EMP_WARNINGS> HR_EMP_WARNINGS { get; set; }
    	[DataMember]
        public virtual ICollection<HR_EMP_MEMBER_DETAIL> HR_EMP_MEMBER_DETAIL { get; set; }
    	[DataMember]
        public virtual ICollection<HR_EMP_QUALIFICATION> HR_EMP_QUALIFICATION { get; set; }
    	[DataMember]
        public virtual HR_EMP_WORK_EXPERIENCE HR_EMP_WORK_EXPERIENCE { get; set; }
    	[DataMember]
        public virtual HR_EMPLOYEE_PD HR_EMPLOYEE_PD { get; set; }
    	[DataMember]
        public virtual HR_EMPLOYEE_JI HR_EMPLOYEE_JI { get; set; }
    	[DataMember]
        public virtual HR_EMPLOYEE_JS HR_EMPLOYEE_JS { get; set; }
    	[DataMember]
        public virtual HR_EMPLOYEE_TD HR_EMPLOYEE_TD { get; set; }
    	[DataMember]
        public virtual HR_EMPLOYEE_PC HR_EMPLOYEE_PC { get; set; }
    	[DataMember]
        public virtual HR_EMPLOYEE_CDWD HR_EMPLOYEE_CDWD { get; set; }
    	[DataMember]
        public virtual HR_EMPLOYEE_OC HR_EMPLOYEE_OC { get; set; }
    	[DataMember]
        public virtual HR_EMPLOYEE_EIM_WS HR_EMPLOYEE_EIM_WS { get; set; }
    	[DataMember]
        public virtual ICollection<HR_EMP_CASH_BENEFIT> HR_EMP_CASH_BENEFIT { get; set; }
    	[DataMember]
        public virtual ICollection<HR_EMP_NONCASH_BENEFIT> HR_EMP_NONCASH_BENEFIT { get; set; }
        public HR_EMPLOYEE Clone()
        {
    	return this.MemberwiseClone() as HR_EMPLOYEE;
    }
    public override String ToString(){
        return EMP_NUMBER + "-" + EMP_CALLING_NAME;
    }
    }
}
